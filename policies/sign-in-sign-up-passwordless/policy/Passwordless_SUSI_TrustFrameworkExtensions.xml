<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                      xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
                      PolicySchemaVersion="0.3.0.0"
                      TenantId="yourtenant.onmicrosoft.com"
                      PolicyId="B2C_1A_Passwordless_SUSI_TrustFrameworkExtensions"
                      PublicPolicyUri="http://yourtenant.onmicrosoft.com/B2C_1A_Passwordless_SUSI_TrustFrameworkExtensions">

	<BasePolicy>
		<TenantId>yourtenant.onmicrosoft.com</TenantId>
		<PolicyId>B2C_1A_TrustFrameworkExtensions_Samples_MFA</PolicyId>
	</BasePolicy>
	
	<BuildingBlocks>
		<ClaimsSchema>
	
			<ClaimType Id="passwordGUID">
				<DataType>string</DataType>
				<UserInputType>TextBox</UserInputType>
			</ClaimType>
			
			<ClaimType Id="mfaErrorMessage">
				<DisplayName>MFA not set</DisplayName>
				<DataType>string</DataType>
				<UserInputType>Paragraph</UserInputType>
			</ClaimType>			
					
		</ClaimsSchema>
		
		<ClaimsTransformations>
			
			<ClaimsTransformation Id="CreatePasswordGUID" TransformationMethod="CreateRandomString">
				<InputParameters>
					<InputParameter Id="randomGeneratorType" DataType="string" Value="GUID"/>
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="passwordGUID" TransformationClaimType="outputClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
			
			<ClaimsTransformation Id="CreatePassword" TransformationMethod="FormatStringClaim">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="passwordGUID" TransformationClaimType="inputClaim"/>
				</InputClaims>
				<InputParameters>
					<InputParameter Id="stringFormat" DataType="string" Value="Q1W2E3R4T5Y6hjdgjahgjhjheg@#$%JGHJGHJGHJgfh-{0}"/>
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="newPassword" TransformationClaimType="outputClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
			
			<ClaimsTransformation Id="CreateMFAErrorMessage" TransformationMethod="CreateStringClaim">
				<InputParameters>
					<InputParameter Id="value" DataType="string" Value="You have not yet proofed up for MFA. Please proof up before signing in"/>
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="mfaErrorMessage" TransformationClaimType="createdClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
		</ClaimsTransformations>
		
	</BuildingBlocks>
	
	<ClaimsProviders>
		<ClaimsProvider>
			<DisplayName>Local Account</DisplayName>
			<TechnicalProfiles>

				<TechnicalProfile Id="LocalAccountSignUpWithLogonEmail-Passwordless">
					<DisplayName>Email signup</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<Metadata>
						<Item Key="IpAddressClaimReferenceId">IpAddress</Item>
						<Item Key="ContentDefinitionReferenceId">api.localaccountsignup</Item>
						<Item Key="language.button_continue">Create</Item>
					</Metadata>
					<CryptographicKeys>
						<Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
					</CryptographicKeys>
					<InputClaims>
						<InputClaim ClaimTypeReferenceId="email"/>
					</InputClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="objectId"/>
						<OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true"/>						
						<OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true"/>
						<OutputClaim ClaimTypeReferenceId="authenticationSource"/>
						<OutputClaim ClaimTypeReferenceId="newUser"/>

						<!-- Optional claims, to be collected from the user -->
						<OutputClaim ClaimTypeReferenceId="displayName" Required="true"/>
						<OutputClaim ClaimTypeReferenceId="givenName" Required="true"/>
						<OutputClaim ClaimTypeReferenceId="surName" Required="true"/>
					</OutputClaims>
					<ValidationTechnicalProfiles>
						<ValidationTechnicalProfile ReferenceId="AAD-UserWriteUsingLogonEmail"/>
					</ValidationTechnicalProfiles>
					<UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD"/>
				</TechnicalProfile>
				
				<TechnicalProfile Id="AAD-UserWriteUsingLogonEmail">
					<InputClaimsTransformations>
						<!-- Create random password -->
						<InputClaimsTransformation ReferenceId="CreatePasswordGUID"/>
						<InputClaimsTransformation ReferenceId="CreatePassword"/>
					</InputClaimsTransformations>
					<PersistedClaims>
						<PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password"/>						
					</PersistedClaims>
				</TechnicalProfile>
				
				<TechnicalProfile Id="AAD-UserReadUsingEmailAddress">
					<OutputClaims>						
						<OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber"/>
					</OutputClaims>
				</TechnicalProfile>
				
				<TechnicalProfile Id="PhoneFactor-InputOrVerify">
					<Metadata>
						<!-- Sample action required: If you want the option of a phone call as well as a SMS OTP, comment this out -->
						<Item Key="setting.authenticationMode">sms</Item>
					</Metadata>
				</TechnicalProfile>
		
			</TechnicalProfiles>
		</ClaimsProvider>
		
		<ClaimsProvider>
			<DisplayName>Local Account Email</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="SelfAsserted-LocalAccountEmailSignin">
					<DisplayName>Local Account Email Signin</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<Metadata>
						<Item Key="SignUpTarget">SignUpWithLogonUsernameExchange</Item>
						<Item Key="setting.operatingMode">Email</Item>
						<Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>						
					</Metadata>
					<IncludeInSso>false</IncludeInSso>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="email"/>
					</OutputClaims>
				</TechnicalProfile>
				
			</TechnicalProfiles>
		</ClaimsProvider>
		
		<ClaimsProvider>
			<DisplayName>Self Asserted</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="SelfAsserted-Error">
					<DisplayName>MFA error message</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
						<Item Key="setting.showContinueButton">false</Item>
						<Item Key="setting.showCancelButton">false</Item>
					</Metadata>
					<InputClaims>
						<InputClaim ClaimTypeReferenceId="mfaErrorMessage"/>
					</InputClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="mfaErrorMessage"/>
					</OutputClaims>
				</TechnicalProfile>

				<TechnicalProfile Id="SelfAsserted-MFAError">
					<InputClaimsTransformations>
						<InputClaimsTransformation ReferenceId="CreateMFAErrorMessage"/>
					</InputClaimsTransformations>
					<IncludeTechnicalProfile ReferenceId="SelfAsserted-Error"/>
				</TechnicalProfile>

			</TechnicalProfiles>
		</ClaimsProvider>
	
		
	</ClaimsProviders>
	
	<UserJourneys>
		<UserJourney Id="SignUpOrSignIn-Passwordless">
			<OrchestrationSteps>

				<OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
					<ClaimsProviderSelections>
						<ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange"/>
					</ClaimsProviderSelections>
					<ClaimsExchanges>
						<ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountEmailSignin"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- Check if the user has selected to sign in using one of the social providers -->
				<OrchestrationStep Order="2" Type="ClaimsExchange">
					<Preconditions>
						<Precondition Type="ClaimsExist" ExecuteActionsIf="true">
							<Value>email</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
					</Preconditions>
					<ClaimsExchanges>
						<ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail-Passwordless"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- This step reads any user attributes that we may not have received when authenticating using ESTS so they can be sent 
          in the token. -->
				<OrchestrationStep Order="3" Type="ClaimsExchange">
					<Preconditions>
						<Precondition Type="ClaimEquals" ExecuteActionsIf="true">
							<Value>authenticationSource</Value>
							<Value>socialIdpAuthentication</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
					</Preconditions>
					<ClaimsExchanges>
						<ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingEmailAddress"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- Throw error if user not proofed up -->
				<OrchestrationStep Order="4" Type="ClaimsExchange">
					<Preconditions>
						<Precondition Type="ClaimsExist" ExecuteActionsIf="true">
							<Value>newUser</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
						<Precondition Type="ClaimsExist" ExecuteActionsIf="true">
							<Value>strongAuthenticationPhoneNumber</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
					</Preconditions>
					<ClaimsExchanges>
						<ClaimsExchange Id="SelfAssertedMFAError" TechnicalProfileReferenceId="SelfAsserted-MFAError"/>
					</ClaimsExchanges>
				</OrchestrationStep>
				
				<!-- This step checks whether there's a phone number on record,  for the user. If found, then the user is challenged to verify it. -->
				<OrchestrationStep Order="5" Type="ClaimsExchange">
					<Preconditions>
						<Precondition Type="ClaimsExist" ExecuteActionsIf="true">
							<Value>isActiveMFASession</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
					</Preconditions>
					<ClaimsExchanges>
						<ClaimsExchange Id="PhoneFactor-Verify" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify"/>
					</ClaimsExchanges>
				</OrchestrationStep>

				<!-- Save MFA phone number: The precondition verifies whether the user provided a new number in the 
             previous step. If so, then the phone number is stored in the directory for future authentication 
             requests. -->
				<OrchestrationStep Order="6" Type="ClaimsExchange">
					<Preconditions>
						<Precondition Type="ClaimsExist" ExecuteActionsIf="false">
							<Value>newPhoneNumberEntered</Value>
							<Action>SkipThisOrchestrationStep</Action>
						</Precondition>
					</Preconditions>
					<ClaimsExchanges>
						<ClaimsExchange Id="AADUserWriteWithObjectId" TechnicalProfileReferenceId="AAD-UserWritePhoneNumberUsingObjectId"/>
					</ClaimsExchanges>
				</OrchestrationStep>
				
				<OrchestrationStep Order="7" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer"/>

			</OrchestrationSteps>
			<ClientDefinition ReferenceId="DefaultWeb"/>
		</UserJourney>
	</UserJourneys>
	
</TrustFrameworkPolicy>



